name: Self-hosted runner (nightly-ci)




#
#  send_results:
#    name: Send results to webhook
#    runs-on: ubuntu-22.04
#    if: always()
#    needs: [
#      setup,
#      run_tests_single_gpu,
#      run_tests_multi_gpu,
#      run_torch_cuda_extensions_gpu
#    ]
#    steps:
#      - name: Preliminary job status
#        shell: bash
#        # For the meaning of these environment variables, see the job `Setup`
#        run: |
#          echo "Setup status: ${{ needs.setup.result }}"
#
#      - uses: actions/checkout@v4
#      - uses: actions/download-artifact@v4
#      - name: Send message to Slack
#        env:
#          CI_SLACK_BOT_TOKEN: ${{ secrets.CI_SLACK_BOT_TOKEN }}
#          CI_SLACK_CHANNEL_ID: ${{ secrets.CI_SLACK_CHANNEL_ID }}
#          CI_SLACK_CHANNEL_ID_DAILY: ${{ secrets.CI_SLACK_CHANNEL_ID_DAILY }}
#          CI_SLACK_CHANNEL_DUMMY_TESTS: ${{ secrets.CI_SLACK_CHANNEL_DUMMY_TESTS }}
#          CI_SLACK_REPORT_CHANNEL_ID: ${{ secrets.CI_SLACK_CHANNEL_ID_PAST_FUTURE }}
#          ACCESS_REPO_INFO_TOKEN: ${{ secrets.ACCESS_REPO_INFO_TOKEN }}
#          CI_EVENT: Nightly CI
#          SETUP_STATUS: ${{ needs.setup.result }}
#        # We pass `needs.setup.outputs.matrix` as the argument. A processing in `notification_service.py` to change
#        # `models/bert` to `models_bert` is required, as the artifact names use `_` instead of `/`.
#        run: |
#          pip install slack_sdk
#          pip show slack_sdk
#          python utils/notification_service.py "${{ needs.setup.outputs.matrix }}"
#
#
#      # delete-artifact
#      - uses: geekyeggo/delete-artifact@v2
#        with:
#          name: |
#              single-*
#              multi-*
